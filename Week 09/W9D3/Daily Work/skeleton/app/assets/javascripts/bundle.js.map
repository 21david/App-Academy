{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,sCAAsC;AACtC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;AC1CA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;;;;;;UCxBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA,KAAK;AACL,CAAC","sources":["./frontend/api_util.js","./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const ApiUtil = {\n//     newGifAJAX: function() {\n//       // always explicitly return because it makes debugging easier\n//       // explicitly returning whatever is returned by the ajax method. (a promise)\n//       return $.ajax({\n//         method: 'GET',\n//         url: 'https://api.giphy.com/v1/gifs/random?api_key=9IfxO6R6fpEZMAdqdw66QUgQdPejVIAW&rating=G&tag=banana',\n//       });\n//     },\n//     saveGifAJAX: function(gifArg) { //expect gifArg to have keys of title and url\n//       return $.ajax({\n//         method: \"POST\",\n//         url: \"/gifs\",\n//         dataType: \"JSON\",\n//         data: {\n//           gif: gifArg\n//         }\n//       })\n//     },\n//     fetchSavedGifAJAX: function(titleArg) {\n//       return $.ajax({\n//         method: \"GET\",\n//         url: `/gifs/${titleArg}`,\n//         dataType: \"JSON\"\n//       })\n//     }\n    follow: function(userId){\n        return $.ajax({\n                    method: \"POST\",\n                    url: `/users/${userId}/follow`,\n                    dataType : \"JSON\",\n                    // data: {\n                    //     follow: {\n                    //         followee_id: this.user_id\n                    //     },\n                    //     followed: {\"follower_Id\"}\n                    // }\n        });\n    }\n   \n};\n  \n  module.exports = ApiUtil;","const ApiUtil = require(\"./api_util.js\")\n\nfunction FollowToggle($el) { // $el is the button\n    // this.userId = $el.find(\"data-user-id\");\n    // this.followState = $el.find(\"data-initial-follow-state\");\n    this.userId = $el.data('user-id');\n    this.followState = $el.data('initial-follow-state');\n    this.el = $el;\n    this.el.innerText = this.render();\n}\n\nFollowToggle.prototype.render = function() {\n    this.followState === 'followed' ? \"Follow!\" : \"Unfollow!\"\n}\n\nFollowToggle.prototype.handleClick = function(e) {\n    e.preventDefault();\n    if(this.render() === 'Unfollow!') {\n       ApiUtil.follow(this.userId).then();\n    } else {\n\n    }\n}\n\nmodule.exports = FollowToggle;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle');\n\n$(() => { \n    $('button.follow-toggle').each(function(index, btn) {\n        new FollowToggle(btn);\n    })\n})\n"],"names":[],"sourceRoot":""}